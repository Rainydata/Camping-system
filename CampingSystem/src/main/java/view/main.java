/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package view;

import java.awt.Color;
import java.awt.Dimension;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.JButton;
import javax.swing.JOptionPane;
import util.matrix;



/**
 *
 * @author benav
 */
public class main extends javax.swing.JDialog  {
    
    JButton [][] Matrixbtn;
    matrix matrixTents;
    
    /**
     * Creates new form main
     */
    public main(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        setLocationRelativeTo(this);
        Matrixbtn = new JButton[3][6];
        matrixTents = new matrix();
        createMatrixBtn();
        showColors();
    }
    
    //create the matrix and adjust the jpanel
    public void createMatrixBtn(){
        int ButtonWith = 60;
        int ButtonHeight = 60;
        int spacewith = 20;
        int spaceHeight = 20;
        
        int MatrixbtnWith = Matrixbtn[0].length * (ButtonWith + spacewith) - spacewith;
        int matrixbtnHeight = Matrixbtn.length * (ButtonHeight + spaceHeight) - spaceHeight;
        
        Dimension dialogSize = getSize();
        int dialogWith = dialogSize.width;
        int dialogHeigh = dialogSize.height;
        
        int startX = (dialogWith - MatrixbtnWith  ) / 2 - 50;
        int startY = (dialogHeigh -  matrixbtnHeight ) /2;
        
        setLayout(null);
        
        for (int i=0; i < Matrixbtn.length; i++ ){
            for(int j=0; j < Matrixbtn[i].length; j++){
                Matrixbtn[i][j] = new JButton("C" + i);
                int x = startX + j * (ButtonWith + spacewith);
                int y = startY + i * (ButtonHeight + spaceHeight);
                Matrixbtn[i][j].setBounds(x, y, ButtonWith, ButtonHeight);
                add(Matrixbtn[i][j]);
                
                Matrixbtn[i][j].addActionListener(new ActionListener() {
                    @Override
                    public void actionPerformed(ActionEvent e) {
                        
                        int row = -1;
                        int col = -1;
                        
                        for (int r = 0; r < Matrixbtn.length;r++){
                            for(int c = 0; c < Matrixbtn[r].length; c++){
                               if(Matrixbtn[r][c] == e.getSource()){
                                   row = r;
                                   col = c;
                                   JOptionPane.showInputDialog("Escribe la perwsona quien va a rentar la tienda de campaÃ±a");
                                   Matrixbtn[row][col].setBackground(Color.red);
                                   break;
                               }
                            }
                        }
                        matrixTents.setTentOccupied(row, col);
                       
                        
                    }
                });
                
            }
        }
    }
    //state of the Matrix
    
    public void showColors(){
        for (int i = 0; i < Matrixbtn.length; i++){
            for (int j = 0; j < Matrixbtn[i].length; j++){
               if(matrixTents.isTentFree(i, j)){
                   Matrixbtn[i][j].setBackground(Color.GREEN);
               }else{
                   Matrixbtn[i][j].setBackground(Color.red);
               }
            }
        }
    }
   
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setText("Camping System");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(322, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(320, 320, 320))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(378, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                main dialog = new main(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    // End of variables declaration//GEN-END:variables
}
